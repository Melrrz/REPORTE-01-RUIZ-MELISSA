warning: LF will be replaced by CRLF in main.py.
The file will have its original line endings in your working directory
[1mdiff --git a/main.py b/main.py[m
[1mindex 38ac887..403bafd 100644[m
[1m--- a/main.py[m
[1m+++ b/main.py[m
[36m@@ -64,29 +64,26 @@[m [mdef get_menos_ventas_por_categorias(categorias, lifestore_sales):[m
     for category in categorias:[m
         prod_vendidos_por_categorias[category] = {'prod_id':[], 'ventas':[], 'ordenados_ventas':[], 'busquedas':[], 'ordenados_busquedas':[]}[m
         for prod_id in categorias[category]:[m
[32m+[m[32m            contador_ventas = {prod_id: 0}[m
[32m+[m[32m            prod_vendidos_por_categorias[category]['prod_id'].append(prod_id)[m
[32m+[m[32m            contador_busquedas = {prod_id: 0}[m
             for sale in lifestore_sales:[m
                 if prod_id == sale[IDX_SALES_ID_PRODUCTO]:[m
[31m-                    prod_vendidos_por_categorias[category]['prod_id'].append(prod_id)[m
[32m+[m[32m                    contador_ventas[prod_id] += 1[m
                     prod_vendidos_por_categorias[category]['ventas'].append(sale)[m
[32m+[m[32m                    break[m
             for search in lifestore_searches:[m
                 if prod_id == search[IDX_SEARCHES_ID_PRODUCT]:[m
[32m+[m[32m                    contador_busquedas[prod_id] += 1[m
                     prod_vendidos_por_categorias[category]['busquedas'].append(search)[m
[31m-        ordenados_ventas = get_ordenar_productos(prod_vendidos_por_categorias[category]['ventas'], 5, False)[m
[31m-        prod_vendidos_por_categorias[category]['ordenados_ventas'] = ordenados_ventas         [m
[31m-        ordenados_menores_busquedas = get_ordenar_productos(prod_vendidos_por_categorias[category]['busquedas'], 5, False)[m
[31m-        prod_vendidos_por_categorias[category]['ordenados_busquedas'] = ordenados_menores_busquedas         [m
[32m+[m[32m                    break[m
[32m+[m[32m        ordenados_ventas = sorted(contador_ventas.items(), key = lambda x:x[1], reverse = False)[m
[32m+[m[32m        prod_vendidos_por_categorias[category]['ordenados_ventas'] = ordenados_ventas[m
[32m+[m[32m        ordenados_menores_busquedas = sorted(contador_busquedas.items, key = lambda x:x[1], reverse = False)[m
[32m+[m[32m        prod_vendidos_por_categorias[category]['ordenados_busquedas'] = ordenados_menores_busquedas[m
     return prod_vendidos_por_categorias[m
 [m
[31m-[m
[31m-[m
[31m-[m
[31m-def print_product(prod_id):[m
[31m-    '''[m
[31m-    todo: itearar en mi listado de productos para buscar el prod_id e imprimir el nombre del producto[m
[31m-    '''[m
[31m-    [m
[31m-    print(prod_id)[m
[31m-[m
[32m+[m[41m       [m
 def get_ordenar_productos(lifestore_sales, limit = 5, top = True,):[m
     '''[m
     Retorna una lista de tuplas con la cantidad ventas que tuvo cada id_product y los ordena descendente[m
[36m@@ -100,30 +97,6 @@[m [mdef get_ordenar_productos(lifestore_sales, limit = 5, top = True,):[m
     productos_ordenados = sorted(productos.items(), key = lambda x:x[1], reverse = top)   [m
     return productos_ordenados[:limit][m
 [m
[31m-def get_ordenar_por_resenas(lifestore_products, limit = 5, top = True):[m
[31m-    #To Do -> Averiguar que pedo con tomar en cuenta productos con devoluci√≥n[m
[31m-    resenas = {}[m
[31m-    for sale in lifestore_sales:[m
[31m-        prod_id = sale[IDX_SALES_ID_PRODUCTO][m
[31m-        if prod_id not in resenas.keys():[m
[31m-            resenas[prod_id] = {'score_acumulado':0,'cuenta':0}[m
[31m-        resenas[prod_id]['score_acumulado'] = resenas[prod_id]['score_acumulado'] + sale[IDX_SALES_SCORE][m
[31m-        resenas[prod_id]['cuenta'] = resenas[prod_id]['cuenta'] + 1 [m
[31m-    for prod_id in resenas:[m
[31m-        prom = resenas[prod_id]['score_acumulado'] / resenas[prod_id]['cuenta'] [m
[31m-        resenas[prod_id]['prom'] = prom[m
[31m-    promedios_ordenados = sorted(resenas.items(), key = lambda x:x[1]['prom'], reverse = top)[m
[31m-    return promedios_ordenados[:limit]   [m
[31m-[m
[31m-def get_totales(lifestore_products, lifestore_sales):[m
[31m-    totales = {}[m
[31m-    for product in lifestore_products:[m
[31m-        for sale in lifestore_sales:[m
[31m-            id_prod = product[IDX_PRODUCTS_ID][m
[31m-            if id_prod is not lifestore_sales:[m
[31m-                totales[id_prod] = 0[m
[31m-[m
[31m-[m
 [m
 def print_reports():[m
     '''[m
